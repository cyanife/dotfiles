#===============================================================
# $HOME/.zshrc.local FILE for ZSH 5.4+
# @cyanife
# Last modified: Sat Apr 18 01:33:29 JST 2020
#===============================================================
source ~/.zinit/bin/zinit.zsh


#---------------------------------------------------------------
# !! REQUIRED !! 
# sudo apt install subversion
# sudo apt install unzip
# compaudit | xargs sudo chmod g-w,o-w
# When error occured, try 'zinit delete <plugin/script>' to fix
#---------------------------------------------------------------

#===============================================================
# ZSH PLUGINS 
#===============================================================

# completion 
zinit ice blockf atpull'zinit creinstall -q .'
zinit light zsh-users/zsh-completions

# syntax highlighting 
zinit light zdharma/fast-syntax-highlighting

# autosuggestion 
zinit load zsh-users/zsh-autosuggestions

# quick jump 
zinit light skywind3000/z.lua

# history search
zinit light zdharma/history-search-multi-word

# switch to gitroot
zinit light mollifier/cd-gitroot

# load part of OMZ freamwork/plugins
zinit snippet OMZL::completion.zsh
zinit snippet OMZL::history.zsh
zinit snippet OMZL::key-bindings.zsh
zinit snippet OMZL::theme-and-appearance.zsh
zinit snippet OMZP::colored-man-pages
zinit snippet OMZP::sudo
zinit snippet OMZP::git

# unarchive extension aka 'x'
zinit ice svn
zinit snippet OMZP::extract

# completion with fzf
zinit ice atinit"zicompinit; zicdreplay"
zinit light Aloxaf/fzf-tab

# p10k theme
zinit ice depth=1
zinit light romkatv/powerlevel10k

#===============================================================
# BINARYS 
#===============================================================

# PATH WRAPPER
zinit light zinit-zsh/z-a-bin-gem-node

# BINARYS
# exa: modern alternative of 'ls'
# ripgrep: modern grep tool
# fd: modern alternative of 'find'
# bat: modern alternative of 'cat'
# fzf: cmd-line fuzzy finder
zinit as="null" from="gh-r" for \
    sbin"exa* -> exa"    ogham/exa \
    sbin"*/rg -> rg"     BurntSushi/ripgrep \
    sbin="**/fd"         @sharkdp/fd \
    sbin="**/bat"        @sharkdp/bat \
    sbin="fzf"    junegunn/fzf-bin

# COMPLETIONS
zinit ice mv="*.zsh -> _fzf" as="completion"
zinit snippet 'https://github.com/junegunn/fzf/blob/master/shell/completion.zsh'
zinit snippet 'https://github.com/junegunn/fzf/blob/master/shell/key-bindings.zsh'

zinit ice as="completion"
zinit snippet 'https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/fd/_fd'

zinit ice mv="*.zsh -> _exa" as="completion"
zinit snippet 'https://github.com/ogham/exa/blob/master/contrib/completions.zsh'

#===============================================================
# COMMON CONFIGS
#===============================================================

#-----------------------
# ALIAS
#-----------------------
alias ls=exa
alias ll="ls -al --icons"

#-----------------------
# OTHER SETTINGS
#-----------------------
DISABLE_LS_COLORS=true


#===============================================================
# PLUGIN/BINARY SETTINGS
#===============================================================

#-----------------------
# zsh-completions
#-----------------------
# windows compatible
zstyle ':completion:*:complete:-command-:*:*' ignored-patterns '*.pdf|*.exe|*.dll'
# windows compatible
zstyle ':completion:*:*sh:*:' tag-order files

#-----------------------
# zsh-autosuggestions
#-----------------------
# highlight color
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=5' #PURPLE

#-----------------------
# bat
#-----------------------
# bat color theme
export BAT_THEME="Solarized (dark)"

#-----------------------
# fzf
#-----------------------
# use fzf with fd
export FZF_DEFAULT_COMMAND='fd --type f'

#-----------------------
# fzf-tab
#-----------------------
# disable sort when completing options of any command
zstyle ':completion:complete:*:options' sort false
# use input as query string when completing zlua
zstyle ':fzf-tab:complete:_zlua:*' query-string input
# (experimental, may change in the future)
# some boilerplate code to define the variable `extract` which will be used later
# please remember to copy them
local extract="
# trim input(what you select)
local in=\${\${\"\$(<{f})\"%\$'\0'*}#*\$'\0'}
# get ctxt for current completion(some thing before or after the current word)
local -A ctxt=(\"\${(@ps:\2:)CTXT}\")
# real path
local realpath=\${ctxt[IPREFIX]}\${ctxt[hpre]}\$in
realpath=\${(Qe)~realpath}
"
# give a preview of commandline arguments when completing `kill`
zstyle ':completion:*:*:*:*:processes' command "ps -u $USER -o pid,user,comm,cmd -w -w"
zstyle ':fzf-tab:complete:kill:argument-rest' extra-opts --preview=$extract'ps --pid=$in[(w)1] -o cmd --no-headers -w -w' --preview-window=down:3:wrap
# give a preview of directory by exa when completing cd
zstyle ':fzf-tab:complete:cd:*' extra-opts --preview=$extract'exa -1 --color=always $realpath'



# ==-== EOF ==-==
